@using Essence.Models.ViewModels
@using Essence.Models.Pages
@using Essence.Business.ExtensionMethods
@model ProductListPageViewModel
@{
    Layout = "~/Views/Shared/Layouts/_LeftSideMenu.cshtml";
}

<div class="shop_grid_product_area">
    <div class="row">
        <div class="col-12">
            <div class="product-topbar d-flex align-items-center justify-content-between">
                <!-- Total Products -->
                <div class="total-products">
                    @if (Model.ProductPageCount.HasValue)
                    {
                        <p><span>@Model.ProductPageCount.Value</span> @Html.Translate("/shop/productsfound")</p>
                    }
                    else
                    {
                        if (Model.ProductsToDisplay != null && Model.ProductsToDisplay.Count > 0)
                        {
                            <p><span>@Model.ProductsToDisplay.Count</span> @Html.Translate("/shop/productsfound")</p>
                        }
                        else
                        {
                            <p>@Html.Translate("/shop/noproductsfound")</p>
                        }
                    }
                </div>
                <!-- Sorting -->
                @*<div class="product-sorting d-flex">
                        <p>Sort by:</p>
                        <form action="#" method="get">
                            <select name="select" id="sortByselect">
                                <option value="value">Highest Rated</option>
                                <option value="value">Newest</option>
                                <option value="value">Price: $$ - $</option>
                                <option value="value">Price: $ - $$</option>
                            </select>
                            <input type="submit" class="d-none" value="">
                        </form>
                    </div>*@
            </div>
        </div>
    </div>

    @*@if (Model.SearchText == null)
        {
            @Html.PropertyFor(x => x.CurrentPage.Products,
        new
        {
            CustomTag = "div",
            CssClass = "row",
            ChildrenCustomTagName = "div",
            ChildrenCssClass = "col-12 col-sm-6 col-lg-4",
            Tag = string.Empty
        })
        }
        else
        {*@
    <div class="row">
        @foreach (var page in Model.ProductsToDisplay)
        {
            <div class="col-12 col-sm-6 col-lg-4">
                @Html.Partial("_ProductPartial", page)
            </div>
        }
    </div>
    @*}*@

    @*@Html.PropertyFor(m => m.CurrentPage.Products, new { CssClass = "row" })*@
</div>
<!-- Pagination -->
@*<nav aria-label="navigation">
        <ul class="pagination mt-50 mb-70">
            <li class="page-item"><a class="page-link" href="#"><i class="fa fa-angle-left"></i></a></li>
            <li class="page-item"><a class="page-link" href="#">1</a></li>
            <li class="page-item"><a class="page-link" href="#">2</a></li>
            <li class="page-item"><a class="page-link" href="#">3</a></li>
            <li class="page-item"><a class="page-link" href="#">...</a></li>
            <li class="page-item"><a class="page-link" href="#">21</a></li>
            <li class="page-item"><a class="page-link" href="#"><i class="fa fa-angle-right"></i></a></li>
        </ul>
    </nav>*@

@section SideMenu{
    <div class="shop_sidebar_area">

        @Html.Partial("_CategoriesListWidget", Model)

        <!-- ##### Single Widget ##### -->
        @*<div class="widget catagory mb-50">
                @if (Model.MenuPages.Count() > 0 && Model.MenuPages.Any(p => p.Name == "Shop"))
                {
                    <!-- Widget Title -->
                    <h6 class="widget-title mb-30">@Html.Translate("/shop/categories")</h6>

                    <!--  Catagories  -->
                    <div class="catagories-menu">
                        <ul id="menu-content2" class="menu-content collapse show">
                            @foreach (SitePageData page in Model.MenuPages.Where(p => p.Name == "Shop").First().GetChildren(OnlyVisibleToVisitors: true))
                            {
                                <li>@Html.ContentLink(page.ContentLink)</li>
                            }
                        </ul>
                    </div>
                }
            </div>*@

        @*<!-- ##### Single Widget ##### -->
            <div class="widget price mb-50">
                <!-- Widget Title -->
                <h6 class="widget-title mb-30">Filter by</h6>
                <!-- Widget Title 2 -->
                <p class="widget-title2 mb-30">Price</p>

                <div class="widget-desc">
                    <div class="slider-range">
                        <div data-min="49" data-max="360" data-unit="$" class="slider-range-price ui-slider ui-slider-horizontal ui-widget ui-widget-content ui-corner-all" data-value-min="49" data-value-max="360" data-label-result="Range:">
                            <div class="ui-slider-range ui-widget-header ui-corner-all"></div>
                            <span class="ui-slider-handle ui-state-default ui-corner-all" tabindex="0"></span>
                            <span class="ui-slider-handle ui-state-default ui-corner-all" tabindex="0"></span>
                        </div>
                        <div class="range-price">Range: $49.00 - $360.00</div>
                    </div>
                </div>
            </div>*@

        @*<!-- ##### Single Widget ##### -->
            <div class="widget color mb-50">
                <!-- Widget Title 2 -->
                <p class="widget-title2 mb-30">Color</p>
                <div class="widget-desc">
                    <ul class="d-flex">
                        <li><a href="#" class="color1"></a></li>
                        <li><a href="#" class="color2"></a></li>
                        <li><a href="#" class="color3"></a></li>
                        <li><a href="#" class="color4"></a></li>
                        <li><a href="#" class="color5"></a></li>
                        <li><a href="#" class="color6"></a></li>
                        <li><a href="#" class="color7"></a></li>
                        <li><a href="#" class="color8"></a></li>
                        <li><a href="#" class="color9"></a></li>
                        <li><a href="#" class="color10"></a></li>
                    </ul>
                </div>
            </div>*@

        @*<!-- ##### Single Widget ##### -->
            <div class="widget brands mb-50">
                <!-- Widget Title 2 -->
                <p class="widget-title2 mb-30">Brands</p>
                <div class="widget-desc">
                    <ul>
                        <li><a href="#">Asos</a></li>
                        <li><a href="#">Mango</a></li>
                        <li><a href="#">River Island</a></li>
                        <li><a href="#">Topshop</a></li>
                        <li><a href="#">Zara</a></li>
                    </ul>
                </div>
            </div>*@
    </div>
}

@section Breadcrumb{
    <!-- ##### Breadcumb Area Start ##### -->
    <div class="breadcumb_area bg-img" style="@(Model.CurrentPage.PageImage != null ? "background-image: url(" + Url.ContentUrl(Model.CurrentPage.PageImage) + ")" : "")">
        <div class="container h-100">
            <div class="row h-100 align-items-center">
                <div class="col-12">
                    <div class="page-title text-center">
                        <h2 @Html.EditAttributes(m => m.CurrentPage.Heading)>
                            @Model.CurrentPage.Heading
                        </h2>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- ##### Breadcumb Area End ##### -->
}
